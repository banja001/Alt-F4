<Page x:Class="booking.View.Owner.RatingViewWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:booking.View.Owner"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="RatingView" Height="641" Width="400">
    <Page.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Gray"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Black"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Black"/>
        <ControlTemplate x:Key="ButtonTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Page.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="DataGridCell">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#E69138"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        

                    </Trigger>
                </Style.Triggers>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                
            </Style>
            <Style TargetType="DataGrid">
                <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="Foreground" Value="LightGray"/>
                <Setter Property="Background" Value="Black"/>
                <Setter Property="CanUserResizeColumns" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </Style>
            <Style TargetType="DataGridRow" x:Name="DatagridRowStyle">
                <Setter  Property="Background" Value="black"/>
                
            </Style>
            <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="DarkRed"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Height" Value="20"/>
            </Style>
            
            <Style TargetType="Line" BasedOn="{StaticResource LineOwner}"/>
            <Style TargetType="Label" BasedOn="{StaticResource LabelOwner}"/>
            <Style TargetType="Button" BasedOn="{StaticResource ButtonOwner}"/>
            <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxOwner}"/>
            
        </Grid.Resources>
        <Grid.RowDefinitions>

            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="0.2*"/>

            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="2.3*"/>
            <RowDefinition Height="0.2*"/>

            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="2.8*"/>


        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <Label Name="RatingTable" Content="Rating table: [?]" FontSize="17" Foreground="#E69138"  VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="34,0,0,142" Grid.RowSpan="2">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding RatingTableTooltipCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Label>
        <Popup PlacementTarget="{Binding ElementName=RatingTable}" IsOpen="{Binding RatingTable}">
            <TextBlock FontSize="15" Text="By selecting an item in the table you can see &#x0a;pictures and comments for that rating.&#x0a; Only guests that you also rated are &#x0a;displayed in this table!" Background="LightGray" Padding="5"/>
        </Popup>
        <DataGrid GridLinesVisibility="None" Grid.Row="1" Grid.ColumnSpan="2" x:Name="dgrMain" ItemsSource="{Binding OwnerRatings, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single"
                  IsReadOnly="True" AutoGenerateColumns="False" Width="330" Height="140" HorizontalAlignment="Center" VerticalAlignment="Center"
                  ColumnHeaderStyle="{StaticResource HeaderStyle}" RowHeight="20">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFD8CACA"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Guest" Width="3*" Binding="{Binding GuestName}"/>
                <DataGridTextColumn Header="Clean Rating" Width="3*" Binding="{Binding CleanRating}"/>
                <DataGridTextColumn Header="Kind Rating" Width="3*" Binding="{Binding KindRating}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Line X2="1"  Grid.Row="2" Grid.ColumnSpan="2"/>
        <Label Content="Comment:" Grid.Row="3" FontSize="17" Foreground="#E69138"  VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="32,0,0,164" Grid.RowSpan="2"/>
        <Grid DataContext="{Binding ElementName=dgrMain,Path=SelectedItem}" Grid.Row="4" Grid.ColumnSpan="2" >
            <Border BorderThickness="1" BorderBrush="#447782" Height="137" Width="330">
                <TextBlock  Background="#FF2E2E2C" Foreground="LightGray" HorizontalAlignment="Center"  TextWrapping="Wrap" Text="{Binding Path=Comment}" VerticalAlignment="Center" Height="137" Width="330"/>
            </Border>
            <Label Content="" Name="NoImagesLabel" Margin="182,323,182,366"/>

        </Grid>
        <Line X2="1" Grid.ColumnSpan="2" Grid.Row="5"/>
        <Label Content="Images:" FontSize="17" Foreground="#E69138"  Grid.Row="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="34,0,0,199" Grid.RowSpan="2"/>
        <Grid Grid.Row="7" Grid.ColumnSpan="2" >
            <Button IsEnabled="{Binding NextButtonEnabled}" Template="{DynamicResource ButtonTemplate1}" x:Name="NextImageButton" Command="{Binding NextCommand}" Content="&gt;&gt;" Height="120" Width="20" HorizontalAlignment="Left" Margin="310,40,0,39" />
            <Button IsEnabled="{Binding PrevButtonEnabled}" Template="{DynamicResource ButtonTemplate1}" x:Name="PrevImageButton" Command="{Binding PrevCommand}" Content="&lt;&lt;" Height="120" Width="20" HorizontalAlignment="Left" Margin="70,40,0,39" />
            <Image  Stretch="Fill" Source="{Binding ImageSource}"  Margin="100 30"/>
        </Grid>
    </Grid>
</Page>
